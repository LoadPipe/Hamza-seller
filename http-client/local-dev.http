// POST auth
POST http://localhost:9000/seller/auth

### Get Seller Orders
POST http://localhost:9000/seller/order
Content-Type: application/json

{
    "store_id": "store_01JCK8MX8DZCHXDMMR8SNKN7E3",
    "wallet_address": "0x4fBCF49cC0f91d66Bc5bBbE931913D8709592012"
}

###
// Get Seller Orders
POST http://localhost:9000/seller/order
Content-Type: application/json
Authorization: Bearer: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdG9yZV9pZCI6InN0b3JlXzAxSkNLOE1YOERaQ0hYRE1NUjhTTktON0UzIiwid2FsbGV0X2FkZHJlc3MiOiIweDRmQkNGNDljQzBmOTFkNjZCYzViQmJFOTMxOTEzRDg3MDk1OTIwMTIiLCJpYXQiOjE3MzE2NjI1NDEsImV4cCI6MTczMTc0ODk0MX0.OjDrBiusqm7muqCsdZLcgSZdxmwX0OPCJj3q_mDTGxc

{
    "store_id": "store_01JCK8MX8DZCHXDMMR8SNKN7E3",
    "page": 0,
    "count": 50,
    "sort": {"created_at": "ASC"},
    "filter": {"status": {"eq": "pending"}}
}

### Get Seller Order Details
GET http://localhost:9000/seller/order/detail?order_id=order_01JCHZ33D14HBQ298MAQ6JC1D2
Content-Type: application/json

#
#
#const { data, error, isLoading, isFetching } = useQuery(
#['wishlist', productVariantId], // Use the variant ID directly as part of the query key
#async () => {
#const url = `${process.env.NEXT_PUBLIC_MEDUSA_BACKEND_URL || 'http://localhost:9000'}/custom/product/inventory?variant_id=${productVariantId}`;
#const response = await axios.get(url);
#return response.data; // Return only the data part of the response
#},
#{
#enabled: !!productVariantId, // Ensure the query only runs if productVarientId is defined
#}
#);